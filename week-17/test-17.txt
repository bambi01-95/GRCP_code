#!./grcp-17 -b
(define println (lambda (x) (print x) (putc 10)))

(define f
  (lambda (x)
    (while (> x 0)
	    (println x)
	    (if (= x 10)
	      (return 666))
	    (setq x (- x 1)))
	  42))

(println (f  3))  ;=>  3  2  1  42  ; implicit return from f
(println (f 12))  ;=> 12 11 10 666  ; explicit, early return from f

(define test (lambda ()
  (let ((x 0))
    (while (< (++ x) 10)
      (println x)
      (if (= x 5) (continue))
      (println x)
      (if (= x 8) (break))
      (println x)))))

(println (test))