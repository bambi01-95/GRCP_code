#!./grcp -b

(define println (lambda (x) (print x) (putc 10)))

(let ((x 0))
  (while (< x 10)
    (cond
      ( (= x 1) (println 'one)  )
      ( (= x 6) (println 'six)  )
      ( (= x 8) (return 42)    )
      ('t       (println 'other)))
    (++ x)))
	
(define f
  (lambda (x)
    (while (< x 20)
	  (setq x (+ x 1))
    	  (println x)
	  (if (= x 10) (break))
    	  (println x)
	  (if (= x  6) (continue))
    	  (println x))
	42))

;(println (f 15))  ;=>  3  2  1  42  ; implicit return from f

(println (f  1))  ;=> 12 11 10 666  ; explicit, early return from f